/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface PlButton {
    'absolute': boolean;
    'accordion': boolean;
    'ariaLabel': string;
    'block': boolean;
    'bottom': string;
    'btnIcon': boolean;
    'btnText': string;
    'classNames': string;
    'disabled': boolean;
    'end': boolean;
    'fixed': boolean;
    'groupBtn': boolean;
    'iconBtn': boolean;
    'isOpen': boolean;
    'left': string;
    'link': boolean;
    'outlined': boolean;
    'pressed': boolean | string;
    'right': string;
    'ripple': boolean;
    'shape': string;
    'size': string;
    'slotLeft': boolean;
    'slotRight': boolean;
    'start': boolean;
    'styles': string;
    'targetId': string;
    'text': boolean;
    'textBtn': boolean;
    'title': string;
    'top': string;
    'url': string;
    'variant': string;
    'vertical': boolean;
    'zIndex': string;
  }
  interface PlButtonAttributes extends StencilHTMLAttributes {
    'absolute'?: boolean;
    'accordion'?: boolean;
    'ariaLabel'?: string;
    'block'?: boolean;
    'bottom'?: string;
    'btnIcon'?: boolean;
    'btnText'?: string;
    'classNames'?: string;
    'disabled'?: boolean;
    'end'?: boolean;
    'fixed'?: boolean;
    'groupBtn'?: boolean;
    'iconBtn'?: boolean;
    'isOpen'?: boolean;
    'left'?: string;
    'link'?: boolean;
    'onCustomClick'?: (event: CustomEvent) => void;
    'outlined'?: boolean;
    'pressed'?: boolean | string;
    'right'?: string;
    'ripple'?: boolean;
    'shape'?: string;
    'size'?: string;
    'slotLeft'?: boolean;
    'slotRight'?: boolean;
    'start'?: boolean;
    'styles'?: string;
    'targetId'?: string;
    'text'?: boolean;
    'textBtn'?: boolean;
    'title'?: string;
    'top'?: string;
    'url'?: string;
    'variant'?: string;
    'vertical'?: boolean;
    'zIndex'?: string;
  }

  interface UcSpinner {}
  interface UcSpinnerAttributes extends StencilHTMLAttributes {}

  interface UcStockFinder {}
  interface UcStockFinderAttributes extends StencilHTMLAttributes {
    'onUcSymbolSelected'?: (event: CustomEvent<string>) => void;
  }

  interface UcStockPrice {
    'stockSymbol': string;
  }
  interface UcStockPriceAttributes extends StencilHTMLAttributes {
    'stockSymbol'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'PlButton': Components.PlButton;
    'UcSpinner': Components.UcSpinner;
    'UcStockFinder': Components.UcStockFinder;
    'UcStockPrice': Components.UcStockPrice;
  }

  interface StencilIntrinsicElements {
    'pl-button': Components.PlButtonAttributes;
    'uc-spinner': Components.UcSpinnerAttributes;
    'uc-stock-finder': Components.UcStockFinderAttributes;
    'uc-stock-price': Components.UcStockPriceAttributes;
  }


  interface HTMLPlButtonElement extends Components.PlButton, HTMLStencilElement {}
  var HTMLPlButtonElement: {
    prototype: HTMLPlButtonElement;
    new (): HTMLPlButtonElement;
  };

  interface HTMLUcSpinnerElement extends Components.UcSpinner, HTMLStencilElement {}
  var HTMLUcSpinnerElement: {
    prototype: HTMLUcSpinnerElement;
    new (): HTMLUcSpinnerElement;
  };

  interface HTMLUcStockFinderElement extends Components.UcStockFinder, HTMLStencilElement {}
  var HTMLUcStockFinderElement: {
    prototype: HTMLUcStockFinderElement;
    new (): HTMLUcStockFinderElement;
  };

  interface HTMLUcStockPriceElement extends Components.UcStockPrice, HTMLStencilElement {}
  var HTMLUcStockPriceElement: {
    prototype: HTMLUcStockPriceElement;
    new (): HTMLUcStockPriceElement;
  };

  interface HTMLElementTagNameMap {
    'pl-button': HTMLPlButtonElement
    'uc-spinner': HTMLUcSpinnerElement
    'uc-stock-finder': HTMLUcStockFinderElement
    'uc-stock-price': HTMLUcStockPriceElement
  }

  interface ElementTagNameMap {
    'pl-button': HTMLPlButtonElement;
    'uc-spinner': HTMLUcSpinnerElement;
    'uc-stock-finder': HTMLUcStockFinderElement;
    'uc-stock-price': HTMLUcStockPriceElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
